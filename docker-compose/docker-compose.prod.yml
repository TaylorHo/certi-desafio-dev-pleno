version: '3'

services:
  mongo:
    image: mongo
    restart: on-failure
    env_file:
      - ../services/database/.env.prod
    ports:
      - "27017:27017"
    volumes:
      - ../services/database/data/mongo/:/data/db
      - ../services/database/data/init/:/docker-entrypoint-initdb.d/
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  
  frontend:
    container_name: frontend
    restart: on-failure
    build:
      context: ../services/frontend
    ports:
      - '80:80'
    depends_on:
      - load-balancer
      - kafka
      - users-api-1
      - logger-api-1

  users-api-1:
    container_name: users-api-1
    restart: on-failure
    build:
      context: ../services/users-api
      dockerfile: Dockerfile.prod
    ports:
      - '3008:3000'
    depends_on:
      - kafka
      - logger-api-1
    networks:
      - app-network
  
  users-api-2:
    container_name: users-api-2
    restart: on-failure
    build:
      context: ../services/users-api
      dockerfile: Dockerfile.prod
    ports:
      - '3009:3000'
    depends_on:
      - kafka
      - logger-api-1
    networks:
      - app-network

  logger-api-1:
    container_name: logger-api-1
    restart: on-failure
    build:
      context: ../services/logger-api
      dockerfile: Dockerfile.prod
    ports:
      - '3005:3001'
    depends_on:
      - kafka
      - logger-microsservice
    networks:
      - app-network

  logger-api-2:
    container_name: logger-api-2
    restart: on-failure
    build:
      context: ../services/logger-api
      dockerfile: Dockerfile.prod
    ports:
      - '3006:3001'
    depends_on:
      - kafka
      - logger-microsservice
    networks:
      - app-network

  logger-microsservice:
    container_name: logger-microsservice
    restart: on-failure
    build:
      context: ../services/logger-microsservice
      dockerfile: Dockerfile.prod
    depends_on:
      - kafka
    networks:
      - app-network
  
  load-balancer:
    container_name: load-balancer
    restart: on-failure
    build:
      context: ../services/load-balancer
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - logger-microsservice
      - logger-api-1
      - logger-api-2
      - users-api-1
      - users-api-2
    ports:
      - '3000:80'
    networks:
      - app-network

networks: 
    app-network:
      name: external-network
      external: true